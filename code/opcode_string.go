// Code generated by "stringer -type Opcode"; DO NOT EDIT.

package code

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OpConstant-1]
	_ = x[OpPop-2]
	_ = x[OpMinus-3]
	_ = x[OpBang-4]
	_ = x[OpAdd-5]
	_ = x[OpSub-6]
	_ = x[OpMul-7]
	_ = x[OpDiv-8]
	_ = x[OpEqual-9]
	_ = x[OpNotEqual-10]
	_ = x[OpGreaterThan-11]
	_ = x[OpTrue-12]
	_ = x[OpFalse-13]
	_ = x[OpJumpNotTruthy-14]
	_ = x[OpJump-15]
}

const _Opcode_name = "OpConstantOpPopOpMinusOpBangOpAddOpSubOpMulOpDivOpEqualOpNotEqualOpGreaterThanOpTrueOpFalseOpJumpNotTruthyOpJump"

var _Opcode_index = [...]uint8{0, 10, 15, 22, 28, 33, 38, 43, 48, 55, 65, 78, 84, 91, 106, 112}

func (i Opcode) String() string {
	i -= 1
	if i >= Opcode(len(_Opcode_index)-1) {
		return "Opcode(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _Opcode_name[_Opcode_index[i]:_Opcode_index[i+1]]
}
